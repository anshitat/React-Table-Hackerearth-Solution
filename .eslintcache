[{"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\index.js":"1","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\App.js":"2","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\reportWebVitals.js":"3","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\Table.js":"4","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\columns.js":"5","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\SelectedPlayer.js":"6","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\Search.js":"7","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\CheckBox.js":"8","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\GameScreen.js":"9"},{"size":774,"mtime":1610889688491,"results":"10","hashOfConfig":"11"},{"size":818,"mtime":1610886034275,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4119,"mtime":1610989020465,"results":"14","hashOfConfig":"11"},{"size":978,"mtime":1610877019280,"results":"15","hashOfConfig":"11"},{"size":2260,"mtime":1610963464639,"results":"16","hashOfConfig":"11"},{"size":722,"mtime":1610883255883,"results":"17","hashOfConfig":"11"},{"size":488,"mtime":1610882329530,"results":"18","hashOfConfig":"11"},{"size":2943,"mtime":1610890669027,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"ccqcnu",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\index.js",["44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GameScreen from './components/GameScreen'\nimport reportWebVitals from './reportWebVitals';\nimport { Route, Link, Switch , BrowserRouter as Router} from 'react-router-dom'\n\n\nReactDOM.render(\n    <>\n        <Router>\n          <Switch>\n            <Route exact path =\"/\" component={App}></Route>\n            <Route  path =\"/GameScreen\" component={GameScreen}></Route>\n          </Switch>\n        </Router>\n    </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["45","46"],"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\App.js",["47"],"import React ,{ useState, useEffect, useMemo } from 'react'\nimport './App.css'\nimport Table from './components/Table'\n\nfunction App() {\n  const [loading, setLoading] = useState(false)\n  const [mockdata, setMockdata] = useState([])\n\n  const fetchData = () =>{\n    setLoading(true)\n    let url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json'\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) =>{\n        setMockdata( mockdata => data)\n        setLoading(false)\n        console.log('Original Data : ',data)\n      })\n      .catch((err) =>{\n        console.log(err)\n        setLoading(false)\n      })\n  }\n  useEffect(()=>{\n    fetchData()\n  }, [])\n\n  return (\n    <div className='App' >\n      <Table loading={loading} mockdata={mockdata} />\n    </div>\n  )\n}\n\nexport default App\n","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\reportWebVitals.js",[],"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\Table.js",["48"],"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\columns.js",["49"],"export const COLUMNS =[\r\n    {\r\n        Header : 'Player Name',\r\n        accessor : 'Name',\r\n    },\r\n    {\r\n        Header : 'Level',\r\n        accessor : (value)=>{return Math.floor(Math.random()*10)}\r\n    },\r\n    {\r\n        Header : 'Avatar',\r\n        accessor: 'Profile Image',\r\n        Cell : (value) =>{\r\n            return <img  height={25} src={value.value} />\r\n        },\r\n    },\r\n    {\r\n        Header : '🎯Bet',\r\n        accessor : 'Bet',\r\n    },\r\n    {\r\n        Header : 'Wins',\r\n        accessor : (value) =>{\r\n            return (\r\n                Math.floor(Math.random()*30 + 1)\r\n            )\r\n        },\r\n    },\r\n    { \r\n        Header : 'Lost',\r\n        accessor : (value) =>{\r\n            return (\r\n                Math.floor(Math.random()*10 + 1)\r\n            )\r\n        },\r\n    },\r\n    {\r\n        Header : '💰Price',\r\n        accessor : 'Price',\r\n        value : 'pending'\r\n    },\r\n    {\r\n        Header : 'Status',\r\n        accessor : 'Status'\r\n    }\r\n]","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\SelectedPlayer.js",["50","51"],"import React from 'react'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction SelectedPlayer({selectedRowIds , selectedFlatRows}) {\r\n    console.log('Selected Flat Rows : ', selectedFlatRows)\r\n    return (\r\n        <div className='Select' >\r\n\r\n            <div className='Scroll-Selected'>\r\n                <p style={{ \r\n                     fontSize : '12px',\r\n                     color : 'gray',\r\n                     marginLeft : '20px',\r\n                     padding : '5px',\r\n                  }}>Playing {selectedFlatRows.length}\r\n                </p>  \r\n\r\n            { (selectedFlatRows.length > 0 ) ? \r\n              <div  className='selected-player-div'  >\r\n                        {selectedFlatRows.map( row => {\r\n                            const { Name , Bet, Price} = row.original\r\n                            return(\r\n                                    <div key={selectedRowIds.id} className='Player'>\r\n                                        <div>\r\n                                            <img src={ row.original['Profile Image'] }/>\r\n                                        </div>\r\n                                        <div className='name-div'>\r\n                                            <p>{ Name }</p>\r\n                                            <p>🎯{Bet} </p>\r\n                                        </div>\r\n                                        <span>💰{Price}</span>\r\n                                    </div>\r\n                            )\r\n                        })}\r\n                    \r\n              </div>\r\n              : <p style={{ \r\n                     fontSize : '14px',\r\n                     color : 'gray',\r\n                     margin : '40x',\r\n                     padding : '5px',\r\n                  }}>No Player selected yet !!</p>  \r\n            }\r\n            </div>\r\n\r\n            <Link to={{\r\n                pathname: '/GameScreen',\r\n                aboutProps : {\r\n                    players : selectedFlatRows\r\n                }\r\n            }} >\r\n             <button className='start-btn' disabled={(selectedFlatRows.length!=9)}>START</button>            \r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedPlayer\r\n","E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\Search.js",[],"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\CheckBox.js",[],"E:\\html+css+bootstrap\\Codes\\javascript\\React\\hackerearth-solution-react-app\\src\\components\\GameScreen.js",["52","53","54","55","56","57","58","59"],"import React ,  { useState , useEffect } from 'react'\r\nimport '../App.css'\r\nimport { NativeRouter, useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction GameScreen(props) {\r\n    // const [status ,  setStatus]  = useState('STATUS')\r\n    const [ value_generated, setValue_generated ] = useState('PRESS')\r\n    let history = useHistory()\r\n    console.log(props.location.aboutProps.players)\r\n\r\n    const players_group = props.location.aboutProps.players\r\n\r\n\r\n\r\n    const setValue = () =>{\r\n        setValue_generated( value_generated =>\r\n                Math.floor(Math.random()*10) + 1\r\n         )\r\n    }\r\n    \r\n\r\n    console.log('PRop: ', players_group )\r\n    return (\r\n        <div className='game-board'>\r\n            {/* <h1>Game Start</h1> */}\r\n            {\r\n                players_group.map( row => {\r\n                    return (\r\n                \r\n                        <div className={`player-card ${ ( value_generated == 'PRESS' )\r\n                                        ? 'status'\r\n                                        :\r\n                                        (value_generated == row.values.Bet)\r\n                                            ?'win':'loss'} `}>\r\n                            <div>\r\n                                <img  src={ row.values['Profile Image'] } />\r\n                                <p className='player-name' >{ row.values.Name }</p>\r\n                            </div>\r\n                            <div>\r\n                                <p> 💰{ \r\n                                    ( value_generated == row.values.Bet )\r\n                                        ?(row.values.Price)*2\r\n                                            : (row.values.Price)\r\n                                            \r\n                                       \r\n                                }  </p>\r\n                                <p> 🎯{row.values.Bet} </p>\r\n                            </div>\r\n                            <div>\r\n                                <p> 🏆{row.values.Wins} </p>\r\n                            </div>\r\n\r\n                            <span className='status-bar' > \r\n                                { \r\n                                    ( value_generated == 'PRESS' )\r\n                                        ? 'STATUS'\r\n                                        :\r\n                                        (value_generated == row.values.Bet)\r\n                                            ?'WIN':'LOSS'\r\n                                } \r\n\r\n                            </span>\r\n\r\n                        </div>\r\n                    )\r\n\r\n                } )       \r\n            }\r\n        \r\n          <div onClick={ setValue }  className = 'toss-div'>\r\n                { value_generated }    \r\n          </div>\r\n\r\n          <button className='back-btn'\r\n            onClick={()=>history.goBack()}\r\n          >Back</button>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameScreen\r\n\r\n\r\n",{"ruleId":"60","severity":1,"message":"61","line":6,"column":17,"nodeType":"62","messageId":"63","endLine":6,"endColumn":21},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":45},{"ruleId":"60","severity":1,"message":"69","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":14,"column":20,"nodeType":"72","endLine":14,"endColumn":58},{"ruleId":"70","severity":1,"message":"71","line":27,"column":45,"nodeType":"72","endLine":27,"endColumn":89},{"ruleId":"73","severity":1,"message":"74","line":54,"column":78,"nodeType":"75","messageId":"76","endLine":54,"endColumn":80},{"ruleId":"60","severity":1,"message":"77","line":1,"column":30,"nodeType":"62","messageId":"63","endLine":1,"endColumn":39},{"ruleId":"60","severity":1,"message":"78","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":22},{"ruleId":"73","severity":1,"message":"79","line":31,"column":75,"nodeType":"75","messageId":"76","endLine":31,"endColumn":77},{"ruleId":"73","severity":1,"message":"79","line":34,"column":58,"nodeType":"75","messageId":"76","endLine":34,"endColumn":60},{"ruleId":"70","severity":1,"message":"71","line":37,"column":33,"nodeType":"72","endLine":37,"endColumn":77},{"ruleId":"73","severity":1,"message":"79","line":42,"column":55,"nodeType":"75","messageId":"76","endLine":42,"endColumn":57},{"ruleId":"73","severity":1,"message":"79","line":56,"column":55,"nodeType":"75","messageId":"76","endLine":56,"endColumn":57},{"ruleId":"73","severity":1,"message":"79","line":59,"column":58,"nodeType":"75","messageId":"76","endLine":59,"endColumn":60},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useMemo' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'NativeRouter' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]